name: pull_request

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  matrix:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      MYSQL_DB_DATABASE: keyv_test
      MYSQL_DB_USER: root
      MYSQL_DB_PASSWORD: root
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Start Redis
        uses: supercharge/redis-github-action@1.8.0
      #    - name: Start PostgreSQL
      #      uses: harmon758/postgresql-action@v1
      #      with:
      #        postgresql version: '11'
      #        postgresql password: postgres
      #        postgresql user: postgres
      #        postgresql db: keyv_test
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
      - name: Start MySQL
        run: |
          sudo systemctl start mysql.service
          mysql -e 'CREATE DATABASE ${{ env.MYSQL_DB_DATABASE }}' -u${{ env.MYSQL_DB_USER }} -p${{ env.MYSQL_DB_PASSWORD }}
          mysql -e 'SET GLOBAL max_connections = 300;' -u${{ env.MYSQL_DB_USER }} -p${{ env.MYSQL_DB_PASSWORD }}
      - name: Start PostgreSQL on Ubuntu
        run: |
          sudo systemctl start postgresql.service
          pg_isready
      - name: Setup PostgreSQL for ava tests
        run: |
          sudo -u postgres psql --command="alter system set max_connections = 300;"
          sudo -u postgres psql --command="CREATE DATABASE keyv_test;"
          sudo -u postgres psql --command="ALTER ROLE postgres WITH PASSWORD 'postgres';" --command="\du"
          sudo systemctl restart postgresql.service
          pg_isready
      - id: matrix
        run: echo "matrix=$(node .github/workflows/get-matrix.mjs)" >> $GITHUB_OUTPUT
      - run: echo ${{ steps.matrix.outputs.matrix }}
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}

  test:
    if: github.ref != 'refs/heads/master'
    needs: matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: true
      - name: Test
        run: pnpm --filter "${{ matrix.package }}" test
